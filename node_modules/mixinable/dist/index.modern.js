function n(n,r){class e{constructor(...e){var t=(r||[]).map(n=>new n(...e));Object.keys(n||{}).forEach(r=>{this[r]=n[r].bind(this,t.reduce((n,e)=>(c(e[r])&&n.push(e[r].bind(e)),n),[])),t.forEach(n=>{n[r]=this[r]})})}}return function(...n){return new e(...n)}}function r(n,...r){var e=n.slice().pop();if(c(e))return e(...r)}function e(n,...r){var e=n.map(n=>n(...r));return e.find(f)?Promise.all(e):e}function t(n,r,...e){return n.reduce((n,r)=>f(n)?n.then(n=>r(n,...e)):r(n,...e),r)}function u(n,...r){return t(n.slice().reverse(),...r)}const o={callable:function(...n){return a(r)(...n)},override:function(...n){return a(r)(...n)},parallel:function(...n){return a(e)(...n)},pipe:function(...n){return a(t)(...n)},compose:function(...n){return a(u)(...n)}},i={callable:function(...n){return s(r)(...n)},override:function(...n){return s(r)(...n)},sequence:function(...n){return s(e)(...n)},parallel:function(...n){return s(e)(...n)},pipe:function(...n){return s(t)(...n)},compose:function(...n){return s(u)(...n)}};function c(n){return"function"==typeof n}function f(n){return n&&c(n.then)&&n instanceof Promise}function a(n){return function(...r){var e=n(...r);return f(e)?e:Promise.resolve(e)}}function s(n){return function(...r){var e=n(...r);if(f(e))throw new Error("got promise in sync mode");return e}}export{o as async,r as callable,u as compose,n as define,r as override,e as parallel,t as pipe,i as sync};
//# sourceMappingURL=index.modern.js.map
